#
# Copyright (c) 2019-2021 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# File: .github/workflows/update-checker.yml
# Description: 
#  Check multiple repos to see if there is an update, if so, 
#  send corresponding repository_dispatch event to trigger certain Github actions
#

name: Update Checker

on:
  workflow_dispatch:
  schedule:
    - cron: 23 22 * * *

jobs:
  Check:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        # REPO: [sdf8057/ipq6000, hanwckf/immortalwrt-mt798x, immortalwrt/immortalwrt, ophub/kernel, dimfishr/openwrt, AgustinLorenzo/openwrt, qosmio/openwrt-ipq]
        REPO: [sdf8057/ipq6000, hanwckf/immortalwrt-mt798x, immortalwrt/immortalwrt, ophub/kernel, qosmio/openwrt-ipq, King-Of-Knights/openwrt-6.x]
        
    steps:
      - name: Check All Code Bases
        id: check
        env:
          REPO: ${{ matrix.REPO }}
        run: |
          export REPO_USER="$(echo $REPO | awk -F '/' '{print $1}')"
          echo "REPO_USER=$REPO_USER" >> $GITHUB_ENV
          
          export REPO_NAME="$(echo $REPO | awk -F '/' '{print $2}')"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

          echo $REPO_USER
          echo $REPO_NAME 
          
          export SDF8057_BRANCH="master"
          export HANWCKF_BRANCH="openwrt-21.02"
          export IMMORTALWRT_BRANCH="master"
          export OPHUB_BRANCH="main"
          export BITTHIEF_BRANCH="master"
          export DIMFISHR_BRANCH="qualcommax-6.1-nss"
          export LORENZO_BRANCH="main"
          export QOSMIO_BRANCH="qualcommax-6.x-nss-wifi"
          export KING_OF_KNIGHTS_BRANCH="main"
          
          if [ $REPO_USER == sdf8057 ]
          then
            export BRANCH=$SDF8057_BRANCH
          elif [ $REPO_USER == hanwckf ]
          then
            export BRANCH=$HANWCKF_BRANCH
          elif [ $REPO_USER == ophub ]
          then
            export BRANCH=$OPHUB_BRANCH
          elif [ $REPO_USER == dimfishr ]
          then
            export BRANCH=$DIMFISHR_BRANCH
          elif [ $REPO_USER == AgustinLorenzo ]
          then
            export BRANCH=$LORENZO_BRANCH
          elif [ $REPO_USER == qosmio ]
          then
            export BRANCH=$QOSMIO_BRANCH
          elif [ $REPO_USER == "King-Of-Knights" ]
          then
            export BRANCH=$KING_OF_KNIGHTS_BRANCH
          else
            export BRANCH=$IMMORTALWRT_BRANCH
          fi
          
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          
      - name: Get Commit Hash
        id: getHash
        run: |
          git clone --depth=1 "https://github.com/${{env.REPO_USER}}/${{env.REPO_NAME}}" -b ${{env.BRANCH}} openwrt
          cd openwrt
          echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_ENV
          
          mkdir ~/.cache
          echo "$(git rev-parse HEAD)" > ~/.cache/${{ env.REPO_USER }}-commitHash

      - name: Compare Commit Hash
        id: cacheHash
        uses: actions/cache/restore@main
        with:
          path: ~/.cache/${{ env.REPO_USER }}-commitHash
          key: HEAD-${{ env.commitHash }}

      - name: Save New Commit Hash
        if: steps.cacheHash.outputs.cache-hit != 'true'
        uses: actions/cache/save@main
        with:
          path: ~/.cache/${{ env.REPO_USER }}-commitHash
          key: HEAD-${{ env.commitHash }}

      - name: Wait for certain time(certain target only)
        if: env.REPO_NAME == 'ophub' && steps.cacheHash.outputs.cache-hit != 'true'
        run: sleep 150m
        shell: bash

      - name: Trigger build
        if: steps.cacheHash.outputs.cache-hit != 'true'
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
          event-type: "Source_Code_Update_${{ env.REPO_USER }}"
          
  Clean_up:
    runs-on: ubuntu-latest
    needs: Check
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 10
          keep_minimum_runs: 10
          delete_workflow_pattern: "Checker"
