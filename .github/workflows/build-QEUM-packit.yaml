#=====================================================================================
# Description: Pack OpenWrt for QEMU
# Uses: 
#   ophub/flippy-openwrt-actions (for QEMU)
#=====================================================================================

name: Pack OpenWRT for QEMU

on:
  repository_dispatch:
    types: [Source_Code_Update_ophub, Package_Luci_Update]
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Select SoC"
        required: false
        default: "qemu"
        type: choice
        options:
          - all
          - s922x_s905x3_s905x2_s912_s905d_s905
          - rock5b_h88k_h88k-v3_ak88
          - h66k_h68k_h69k_r66s_r68s_e25
          - beikeyun_l1pro
          - rock5b
          - h88k
          - h88k-v3
          - ak88
          - h66k
          - h68k
          - h69k
          - h69k-max
          - r66s
          - r68s
          - e25
          - photonicat
          - cm3
          - beikeyun
          - l1pro
          - vplus
          - s922x
          - s922x-n2
          - s905x3
          - s905x2
          - s912
          - s905d
          - s905
          - qemu
          - diy
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.1.1_6.6.1"
        type: choice
        options:
          - 5.4.1_5.10.1
          - 5.10.1_5.15.1
          - 6.1.1_6.6.1
          - 5.4.1
          - 5.10.1
          - 5.15.1
          - 6.1.1
          - 6.6.1
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - breakings/OpenWrt
          - ophub/kernel
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      script_diy_path:
        description: "Set custom script loading path"
        required: false
        default: ""
      openwrt_storage:
        description: "Select image storage type."
        required: false
        default: "save"
        type: choice
        options:
          - save
          - temp
      builder_name:
        description: "Set OpenWrt builder signature."
        required: false
        default: "angel"
        type: choice
        options:
          - angel
          - yourname
  schedule:
    - cron: '30 16 * * 6'
    
env:
  TZ: 'Asia/Shanghai'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
          
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}    
  
      - name: Package Armvirt as QEMU(auto triggered)
        if: github.event_name == 'repository_dispatch' && github.event.action == 'Source_Code_Update_ophub' && !cancelled()
        uses: ophub/flippy-openwrt-actions@main
        env:
          OPENWRT_ARMVIRT: "https://github.com/xlighting2017/Actions-Openwrt/releases/download/Immortalwrt_Armvirt/immortalwrt-armsr-armv8-generic-rootfs.tar.gz"
          KERNEL_REPO_URL: "ophub/kernel"
          KERNEL_VERSION_NAME: "6.1.1_6.6.1"
          KERNEL_AUTO_LATEST: true
          PACKAGE_SOC: "qemu"
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Package Armvirt as QEMU(with input)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.openwrt_soc != '' && (!cancelled())
        uses: ophub/flippy-openwrt-actions@main
        env:
          OPENWRT_ARMVIRT: "https://github.com/xlighting2017/Actions-Openwrt/releases/download/Immortalwrt_Armvirt/immortalwrt-armsr-armv8-generic-rootfs.tar.gz"
          PACKAGE_SOC: ${{ inputs.openwrt_soc }}
          KERNEL_REPO_URL: ${{ inputs.kernel_repo }}
          KERNEL_VERSION_NAME: ${{ inputs.openwrt_kernel }}
          KERNEL_AUTO_LATEST: ${{ inputs.auto_kernel }}
          SCRIPT_DIY_PATH: ${{ inputs.script_diy_path }}
          WHOAMI: ${{ inputs.builder_name }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload OpenWrt Firmware to Release
        id: release
        uses: ncipollo/release-action@main
        if:  env.PACKAGED_STATUS == 'success' && (!cancelled())
        with:
          tag: OpenWrt_QEMU_${{ env.PACKAGED_OUTPUTDATE }}
          removeArtifacts: false
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
              打包时间: ${{ env.PACKAGED_OUTPUTDATE }}
              QEMU版
              Default IP: 192.168.199.253
              Default username: root
              Default password: password

              插件列表： 
                ├ amlogic
                ├ ddns
                ├ docker
                ├ filetransfer
                ├ frpc
                ├ OpenClash
                ├ SmartDNS
                ├ ttyd
                ├ KMS 
                └ Zerotier

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        if:  env.PACKAGED_STATUS == 'success' && (!cancelled())
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 2
          delete_workflow_pattern: 'QEMU'

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        if:  env.PACKAGED_STATUS == 'success' && (!cancelled())
        with:
          repo: ${{ github.repository }}
          keep_latest: 3
          delete_tag_pattern: 'QEMU'
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
